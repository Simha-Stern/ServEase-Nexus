version: '3.8'

services:

  node-server:
    build:
      context: ./new-back-end
    develop:
      watch:
        - action: rebuild
          path: ./new-back-end/package.json
    volumes:
      - ./new-back-end/src:/app/src
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - app-network 
    # depends_on:
    #   - mongodb
    # environment:
    #   MONGO_URI: mongodb://mongodb:27017/mydatabase
    command: npm run start:dev


  node-react:
    build:
      context: ./FrontkEnd
    develop:
      watch:
      - action: rebuild
        path: ./FrontkEnd/package.json
    tty: true
    volumes:
      - type: bind
        source: ./FrontkEnd/src
        target: /app/src
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - app-network 
    depends_on:
      - node-server
    command: npm run dev

  postgres:
    image: postgres:15.5-bullseye
    volumes:
      - ./PostgresDB/data:/var/lib/postgresql/data
      - ./PostgresDB/init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: "${PG_DATABASE}"
      POSTGRES_USER: "${PG_USERNAME}"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:${PG_PORT}"

  redis:
    container_name: cache
    image: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

networks: 
  app-network: